@tailwind base;
@tailwind components;
@tailwind utilities;

@font-face {
  font-family: 'Geist';
  src: url('/assets/fonts/Geist-Medium-BF6569491e1c281.otf') format('opentype');
  font-weight: 500;
  font-style: normal;
}

@font-face {
  font-family: 'Geist';
  src: url('/assets/fonts/Geist-Regular-BF6569491e3eff1.otf') format('opentype');
  font-weight: 400;
  font-style: normal;
}

@font-face {
  font-family: 'Geist';
  src: url('/assets/fonts/Geist-Bold-BF6569491da5a14.otf') format('opentype');
  font-weight: 700;
  font-style: normal;
}

* {
  margin: 0px;
  padding: 0px;
}

/* <h1 class="text-3xl font-bold">This is using Geist Bold</h1>
  <h2 class="text-2xl font-medium">This is using Geist Medium</h2>
  <p class="text-lg font-normal">This is using Geist Regular</p> 
  84 Regular
  106 Medium
  146 Bold
  */

@layer utilities {

  .bg-img {
    background-image: url('/assets/images/auth/background-1.svg');
    background-repeat: no-repeat;
    background-position: top right;
    background-size: 800px 826.88px;

  }

  .bg-img-otp {
    background-image: url('/assets/images/auth/background-2.svg');
    background-repeat: no-repeat;
    background-position: 0 -480px;

  }

  input:-webkit-autofill {
    background-color: transparent !important;
    color: #EBEBEB !important;
    box-shadow: 0 0 0 1000px transparent inset;
  }

  input:-webkit-autofill:focus {
    background-color: transparent !important;
    color: white !important;
  }

  input:-webkit-autofill,
  input:-webkit-autofill:focus {
    -webkit-text-fill-color: #EBEBEB !important;
    font-size: 14px;
    transition: background-color 5000s ease-in-out 0s;
    /* Add a long transition */
  }

  input:focus+label,
  input:valid+label {
    font-size: 0.8rem;
    bottom: 20px;
    transform: translateY(-120%);
  }

  /* .overlay-animate {
    animation: fadeIn 0.5s;
  }


  @keyframes fadeIn {
    from {
        opacity: 0;
        transform: scale(0.9);
    }

    to {
        opacity: 1;
        transform: scale(1);
    }
} */

  .fadeOut {
    animation: fadeOut 0.3s forwards;
  }

  .bio-textarea:focus+label,
  .bio-textarea:valid+label {
    font-size: 0.8rem;
    top: 30px;
    transform: translateY(-20%);
  }

  .fbbk-textarea:focus+label,
  .fbbk-textarea:valid+label {
    font-size: 0.8rem;
    top: 15px;
    transform: translateY(-20%);
  }
  input[type="number"]::-webkit-inner-spin-button,
  input[type="number"]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  input[type="number"] {
    -moz-appearance: textfield;
  }

  html,
  body {
    scrollbar-width: none;
    -ms-overflow-style: none;
  }

  ::-webkit-scrollbar {
    width: 0;
  }

  html:hover,
  body:hover,
  *:hover {
    scrollbar-width: thin
  }

  *:hover::-webkit-scrollbar {
    width: 7px;
    height: 7px;
  }

  *:hover::-webkit-scrollbar-thumb {
    background: linear-gradient(180deg, rgba(0, 0, 0, 0.1), #c2e9fb);
    border-radius: 10px;
    box-shadow: inset 2px 2px 5px rgba(0, 0, 0, 0.2);
  }

  *:hover::-webkit-scrollbar-thumb:hover {
    background: linear-gradient(180deg, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1));
  }

  *:hover::-webkit-scrollbar-track {
    background: #f5f5f5;
    border-radius: 10px;
    box-shadow: inset 0px 0px 5px rgba(0, 0, 0, 0.1);
  }

  

}
.input-field {
  position: relative;
  border-bottom: 2px solid #ccc;
  margin: 15px 0;
}

.input-field label {
  position: absolute;
  top: 50%;
  left: 0;
  transform: translateY(-50%);
  color: #fff;
  font-size: 16px;
  pointer-events: none;
  transition: 0.15s ease;
}

.input-field input {
  width: 100%;
  height: 40px;
  background: transparent;
  border: none;
  outline: none;
  font-size: 16px;
  color: #fff;
}

.input-field input:focus~label,
.input-field input:valid~label {
  font-size: 0.8rem;
  top: 10px;
  transform: translateY(-120%);
}
 select.custom-select option {
    background-color: transparent !important;
  }

.backdrop {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}

.dialog {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0.8);
  opacity: 0;
  transition: transform 0.3s ease, opacity 0.3s ease;
}

.show-backdrop {
  opacity: 1;
}

.show-dialog {
  opacity: 1;
  transform: translate(-50%, -50%) scale(1);
}

.mobile-drawup {
  position: fixed;
  bottom: -10049px;
  right: 0px;
  transition: 0.3s;
}

.mobile-drawup.active {
  top: 0;
}

.mobile-drawup.show {
  bottom: 0px;
}

.star-img {
  transition: transform 0.6s cubic-bezier(0.68, -0.55, 0.27, 1.55), opacity 0.4s ease;
  transform-origin: center center;
  display: inline-block;
}

.star-img.filled {
  transform: scale(0) rotate(0deg);
  opacity: 1;
  animation: bounce 0.6s forwards;
}

.star-img.empty {
  opacity: 0.3;
  transform: scale(1) rotate(0deg);
  animation: fadeOut 0.4s forwards;
}

@keyframes bounce {
  0% {
    transform: scale(1) rotate(0deg);
  }
  50% {
    transform: scale(1.6) rotate(15deg);
  }
  70% {
    transform: scale(1.4) rotate(10deg);
  }
  100% {
    transform: scale(1) rotate(0deg);
  }
}

.social-btn {
  transition: background-color 0.3s ease, transform 0.3s ease;
}


#input-container {
  opacity: 0;
  transform: scale(0.95);
  transition: opacity 0.5s ease, transform 0.5s ease;
  display: none;
}

#input-container.show {
  opacity: 1;
  transform: scale(1);
  display: block;
}

#input-container.hidden {
  opacity: 0;
  transform: scale(0.95);
  display: none;
}
/* Style the radio button container */
.custom-radio-container {
  display: flex;
  flex-direction: column;
  gap: 10px; /* Space between the radio buttons */
}

/* Hide the default radio button */
.radio-input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* Style the label as a custom radio button */
.custom-radio {
  display: flex;
  align-items: center;
  cursor: pointer;
  font-size: 16px;
  position: relative;
  padding-left: 35px; /* Space for the custom checkmark */
}

/* Custom checkmark for the radio button */
.radio-checkmark {
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  height: 20px;
  width: 20px;
  background-color: #fff;
  border: 2px solid #bbb;
  border-radius: 50%;
  transition: background-color 0.2s, border-color 0.2s;
}

/* Style when the radio button is checked */
.radio-input:checked ~ .radio-checkmark {
  background-color: #4a90e2;
  border-color: #4a90e2;
}

/* Add a dot inside the checked radio button */
.radio-checkmark::after {
  content: "";
  position: absolute;
  display: none;
  top: 50%;
  left: 50%;
  width: 10px;
  height: 10px;
  background-color: #fff;
  border-radius: 50%;
  transform: translate(-50%, -50%);
}

/* Show the dot when the radio button is checked */
.radio-input:checked ~ .radio-checkmark::after {
  display: block;
}

/* Hover effect for the radio button */
.custom-radio:hover .radio-checkmark {
  border-color: #888;
}



.create-camp-item input[type="radio"] {
  display: none;
}

.create-camp-item .radio-mark {
  width: 20px;
  height: 20px;
  border: 2px solid var(--custom-six);
  border-radius: 50%;
  display: inline-block;
  position: relative;
  vertical-align: middle;
  cursor: pointer;
  box-sizing: border-box;
}

.create-camp-item input[type="radio"]:checked+.radio-mark {
  border-color: var(--tertiary-color);
}

.create-camp-item input[type="radio"]:checked+.radio-mark::after {
  content: '';
  width: 12px;
  height: 12px;
  background: var(--tertiary-color);
  border-radius: 50%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}


.create-camp-item .radio-mark:hover {
  border-color: var(--tertiary-color);
  flex-shrink: 0;
}
